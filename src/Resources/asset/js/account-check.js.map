{"version":3,"sources":["account-check.js"],"names":["$","UserAccountChecker","$element","options","extend","constructor","defaultOptions","validate","attr","validate_name","Phoenix","__","validation","closest","registerEvents","registerHandler","account","trigger","Ajax","get","route","done","res","exists","data","then","fail","xhr","console","error","always","unbind","on","e","check","val","msg","setCustomValidity","UI","showValidateResponse","STATE_FAIL","STATE_SUCCESS","addValidator","value","element","mix","PhoenixEventMixin","plugin"],"mappings":"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","sourcesContent":["/**\n * Part of earth project.\n *\n * @copyright  Copyright (C) 2019 .\n * @license    __LICENSE__\n */\n\n$(() => {\n  class UserAccountChecker extends mix(class {}).with(PhoenixEventMixin) {\n    static defaultOptions = {\n      validate_name: 'user-account'\n    };\n\n    constructor($element, options) {\n      super();\n\n      this.$element = $element;\n      this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\n\n      const validate = this.$element.attr('data-validate');\n\n      this.$element.attr('data-validate', validate + '|' + this.options.validate_name);\n\n      if (!this.$element.attr('data-custom-error-message')) {\n        this.$element.attr(\n          'data-custom-error-message',\n          Phoenix.__('warder.message.user.account.exists')\n        );\n      }\n\n      this.validation = this.$element.closest('form').validation();\n\n      this.registerEvents();\n      this.registerHandler();\n    }\n\n    check(account) {\n      this.trigger('start', { account });\n\n      return Phoenix.Ajax.get(Phoenix.route('user_account_check'), { account })\n        .done((res) => {\n          this.trigger('done', { account, exists: res.data.exists, res });\n\n          return res;\n        })\n        .then((res) => {\n          return res.data.exists;\n        })\n        .fail((xhr) => {\n          console.error(xhr);\n          this.trigger('error', { account, xhr });\n        })\n        .always(() => {\n          this.trigger('end', { account });\n        });\n    }\n\n    registerEvents() {\n      this.$element.unbind('change').on('change', (e) => {\n        this.check(this.$element.val())\n          .then((exists) => {\n            if (exists) {\n              this.$element.attr('data-account-exists', true);\n              const msg = this.$element.attr('data-custom-error-message');\n\n              this.$element[0].setCustomValidity('');\n              Phoenix.UI.showValidateResponse(\n                this.validation,\n                this.validation.STATE_FAIL,\n                this.$element,\n                msg\n              );\n              \n            } else {\n              this.$element[0].setCustomValidity('');\n\n              this.$element.attr('data-account-exists', false);\n              Phoenix.UI.showValidateResponse(\n                this.validation,\n                this.validation.STATE_SUCCESS,\n                this.$element\n              );\n            }\n          });\n      });\n    }\n\n    registerHandler() {\n      this.validation.addValidator(this.options.validate_name, (value, element) => {\n        return element.attr('data-account-exists') === 'false';\n      });\n    }\n  }\n\n  Phoenix.plugin('userAccountCheck', UserAccountChecker);\n});\n"],"file":"account-check.js"}